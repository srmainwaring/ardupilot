#!/usr/bin/env python3

import pathlib

distro = 'uros-macos-13.4-arm64' 
uros_include_dir = f'modules/ardupilot_uros/{distro}/uros/include' 
uros_library_dir = f'modules/ardupilot_uros/{distro}/uros/lib' 


def configure(cfg):
    extra_src_inc = [
        f'{uros_include_dir}',
        f'{uros_include_dir}/rcl',
        f'{uros_include_dir}/rcl_action',
        f'{uros_include_dir}/rcutils',
        f'{uros_include_dir}/rmw',
        f'{uros_include_dir}/rosidl_runtime_c',
        f'{uros_include_dir}/rosidl_typesupport_interface',
        f'{uros_include_dir}/rosidl_typesupport_introspection_c',
        f'{uros_include_dir}/action_msgs',
        f'{uros_include_dir}/ardupilot_msgs',
        f'{uros_include_dir}/builtin_interfaces',
        f'{uros_include_dir}/geographic_msgs',
        f'{uros_include_dir}/geometry_msgs',
        f'{uros_include_dir}/rosgraph_msgs',
        f'{uros_include_dir}/sensor_msgs',
        f'{uros_include_dir}/std_msgs',
        f'{uros_include_dir}/tf2_msgs',
        f'{uros_include_dir}/unique_identifier_msgs',
    ]
    for inc in extra_src_inc:
        cfg.env.INCLUDES += [str(cfg.srcnode.make_node(inc))]

    # auto update submodules
    cfg.env.append_value('GIT_SUBMODULES', 'ardupilot_uros')


def build(bld):
    bld.env.LIB += ['microros']
    bld.env.LIBPATH += [bld.env.SRCROOT + f'/{uros_library_dir}/']
